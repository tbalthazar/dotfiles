#!/usr/bin/env bash

set -e # Exit on any error

if [ "$EUID" -eq 0 ]; then
  echo "Don't run this script as root."
  exit 1
fi

# --- Get playbook name from argument ---
playbook_base="$1"
if [ -z "$playbook_base" ]; then
  echo "Usage: $0 <playbook-name-without-extension>"
  exit 1
fi
playbook="playbooks/${playbook_base}.yml"

# --- Settings ---
branch="tb/2025"
repo_url="https://code.h.tb.io/tb/dotfiles"
timestamp=$(date +"%Y-%m-%d-%H-%M-%S")
logfile="/tmp/bootstrap-laptop-$timestamp.log"

run_with_messages() {
  echo -e "[-] $1 ..."
  bash -c "{ $2; }" >>"$logfile" 2>&1
  echo -e "[+] done.\n"
}

# Step 1: Are we already in sudo group?
echo -e "[-] Checking $(whoami) is in the sudo group ..."
if groups | grep -qw sudo; then
  echo -e "[+] User is in sudo group, done.\n"
else
  echo "[-] Not in sudo group, attempting to add ..."
  su -c "/usr/sbin/usermod -aG sudo $(whoami)"
  echo "[-] User added to sudo group ..."
  echo "[-] Restarting shell with new groups ..."
  exec newgrp sudo <<EONG
$(realpath "$0") $playbook_base
EONG
  echo -e "[+] Added in sudo group, done.\n"
fi

echo -e "--- Starting setup at $timestamp ---\n\n" >"$logfile"
echo -e "[-] Starting setup ...\n"

run_with_messages "Asking for sudo password" \
  "sudo -v"

run_with_messages "Updating packages" \
  "sudo apt update && sudo apt dist-upgrade -y && sudo apt autoremove -y"

run_with_messages "Installing required packages" \
  "sudo apt install -y ansible git"

repo_dest="/tmp/dotfiles"
run_with_messages "Cloning repo" \
  "rm -rf $repo_dest && git clone $repo_url $repo_dest && cd $repo_dest && git checkout $branch"

# --- Check playbook exists ---
if [ ! -f "$repo_dest/ansible/$playbook" ]; then
  echo "[-] ERROR: Playbook '$playbook' not found in repo."
  exit 1
fi

run_with_messages "Run Ansible playbook $playbook_base" \
  "cd $repo_dest/ansible && ANSIBLE_ROLES_PATH=./roles ansible-playbook $playbook --ask-become-pass"

echo -e "[+] Setup done.\n"
