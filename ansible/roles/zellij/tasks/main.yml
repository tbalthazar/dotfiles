---
# Install Zellij

- name: Set asset name
  set_fact:
    asset_name: "zellij-x86_64-unknown-linux-musl.tar.gz"

- name: Check installed version of Zellij
  become: false
  ansible.builtin.shell:
    cmd: "$HOME/.bin-dl/zellij --version | cut -d ' ' -f 2"
  register: zellij_installed_version
  failed_when: false
  changed_when: false

- name: Get GitHub release info
  ansible.builtin.uri:
    url: "https://api.github.com/repos/zellij-org/zellij/releases/tags/{{ zellij_version }}"
    headers:
      Accept: "application/vnd.github+json"
    return_content: yes
  register: release_info

- name: Find asset with matching name
  set_fact:
    matched_asset: "{{ item }}"
  loop: "{{ release_info.json.assets }}"
  when: item.name == asset_name

- name: Fail if asset not found
  ansible.builtin.fail:
    msg: "Asset '{{ asset_name }}' not found in GitHub release"
  when: matched_asset is not defined

- name: Download Zellij
  become: false
  ansible.builtin.get_url:
    url: "{{ matched_asset.browser_download_url }}"
    dest: "/tmp/{{ matched_asset.name }}"
    checksum: "{{ matched_asset.digest }}"
    force: true
    mode: 0644
  when: zellij_installed_version.stdout is not defined or not zellij_installed_version.stdout is search(zellij_version)

- name: Decompress Zellij
  become: false
  unarchive:
    src: "/tmp/zellij-x86_64-unknown-linux-musl.tar.gz"
    remote_src: yes
    dest: "/tmp"
  check_mode: false
  when: zellij_installed_version.stdout is not defined or not zellij_installed_version.stdout is search(zellij_version)

- name: Remove old Zellij version
  become: false
  ansible.builtin.file:
    path: "$HOME/.bin-dl/zellij"
    state: absent
  when: zellij_installed_version.stdout is not defined or not zellij_installed_version.stdout is search(zellij_version)

- name: Create destination dir
  become: false
  ansible.builtin.file:
    path: "$HOME/.bin-dl"
    state: directory
  when: zellij_installed_version.stdout is not defined or not zellij_installed_version.stdout is search(zellij_version)

- name: Copy file to new location
  become: false
  ansible.builtin.copy:
    src: "/tmp/zellij"
    dest: "$HOME/.bin-dl/zellij"
    remote_src: yes
    mode: "0754"
  when: zellij_installed_version.stdout is not defined or not zellij_installed_version.stdout is search(zellij_version)

- name: Remove the old file
  become: false
  ansible.builtin.file:
    path: "/tmp/zellij"
    state: absent
  when: zellij_installed_version.stdout is not defined or not zellij_installed_version.stdout is search(zellij_version)
