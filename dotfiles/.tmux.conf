# --- OS specific config
# TERM_PROGRAM is an env var defined by macOS Terminal.app If for some reason
# Terminal.app stops setting this env var, I could probably set a custom env
# var like $TMUX_OS in my .bash_exports file and use that in the if clause
# below. Defining a env var in .tmux.conf defines it in the shell env, so
# TMUX_COPY_CMD is available in bash.

# Linux specific environment variables
TMUX_COPY_CMD="xclip -in -selection clipboard"
TMUX_STATUS_RIGHT=""

# macOS specific environment variables
%if #{==:#{TERM_PROGRAM},Apple_Terminal}
TMUX_COPY_CMD="pbcopy"
TMUX_STATUS_RIGHT="macOS - #(date '+%a %b %d - %H:%M')"
%endif

# --- key binding

# change prefix
unbind C-b
set -g prefix C-Space

# reload config
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# split window into panes
bind-key - split-window -v -c '#{pane_current_path}'
bind-key _ split-window -h -c '#{pane_current_path}'

# fine adjustment (1 or 2 cursor cells per bump)
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

# coarse adjustment (5 or 10 cursor cells per bump)
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

# switch windows
bind-key Space choose-window
bind-key h previous-window
bind-key l next-window

# move windows
bind-key H swap-window -t -1
bind-key L swap-window -t +1

# Smart pane switching with awareness of vim splits
# https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# restoring clear screen
bind C-l send-keys 'C-l'

# clear buffer history
bind C-k clear-history

# vim copy mode
unbind [
bind Escape copy-mode
setw -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X select-line
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel $TMUX_COPY_CMD

# --- options

# colors

set-option -g default-terminal "screen-256color"

# status bar colors
set-option -g status-bg "#2b2b2b"
set-option -g status-fg yellow
set-option -g status-attr default

# window list colors
setw -g window-status-current-fg "#141414" 
setw -g window-status-current-bg green
setw -g window-status-activity-fg "#2b2b2b"
setw -g window-status-activity-bg red

# pane border
setw -g pane-border-fg brightgreen #base02
setw -g pane-active-border-fg yellow #base01

# message text
setw -g message-bg black #base02
setw -g message-fg brightred #orange

# highlight window when it has new activity
setw -g monitor-activity on
set -g visual-activity on

# status bar content
set-option -g status-left-length 0
set-option -g status-right-length 50
set-option -g status-right $TMUX_STATUS_RIGHT

# decrease command delay (increases vim responsiveness)
set -sg escape-time 1

# Start pane numbering at 1
set -g pane-base-index 1

# Start window numbering at 1
set -g base-index 1
# Renumber windows as they are created and destroyed to keep the window numbers consistent with the count
set -g renumber-windows on 

setw -g history-limit 100000
