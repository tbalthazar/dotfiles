# --- OS specific config
# TERM_PROGRAM is an env var defined by macOS Terminal.app If for some reason
# Terminal.app stops setting this env var, I could probably set a custom env
# var like $TMUX_OS in my .bash_exports file and use that in the if clause
# below. Defining a env var in .tmux.conf defines it in the shell env, so
# TMUX_COPY_CMD is available in bash.

# Linux specific environment variables
TMUX_COPY_CMD="xclip -in -selection clipboard"

# macOS specific environment variables
%if #{==:#{TERM_PROGRAM},Apple_Terminal}
  TMUX_COPY_CMD="pbcopy"
%endif

# --- key binding

# change prefix
unbind C-b
set -g prefix C-Space

# reload config
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# split window into panes
bind-key - split-window -v -c '#{pane_current_path}'
bind-key _ split-window -h -c '#{pane_current_path}'

# fine adjustment (1 or 2 cursor cells per bump)
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

# coarse adjustment (5 or 10 cursor cells per bump)
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

# switch windows
bind-key Space choose-window
bind-key h previous-window
bind-key l next-window

# move windows
bind-key H swap-window -t -1
bind-key L swap-window -t +1

#bind-key c new-window -c '#{pane_current_path}'
bind-key b break-pane -d

# Smart pane switching with awareness of vim splits
# https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

# restoring clear screen
bind C-l send-keys 'C-l'

# clear buffer history
bind C-k clear-history

# Setup 'v' to begin selection as in Vim
unbind [
bind Escape copy-mode
bind-key -T copy-mode-vi v send      -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel $TMUX_COPY_CMD
# Bind ctrl-space+P to paste buffer (useful when working in an SSH session)
bind P paste-buffer

# --- options

# -- start COLOUR (base16)
# default statusbar colors
set-option -g status-style "fg=#a09f93,bg=#393939"

# default window title colors
set-window-option -g window-status-style "fg=#a09f93,bg=default"

# active window title colors
set-window-option -g window-status-current-style "fg=#ffcc66,bg=default"

# pane border
set-option -g pane-border-style "fg=#393939"
set-option -g pane-active-border-style "fg=#515151"

# message text
set-option -g message-style "fg=#d3d0c8,bg=#393939"

# pane number display
set-option -g display-panes-active-colour "#99cc99"
set-option -g display-panes-colour "#ffcc66"

# clock
set-window-option -g clock-mode-colour "#99cc99"

# copy mode highligh
set-window-option -g mode-style "fg=#a09f93,bg=#515151"

# bell
set-window-option -g window-status-bell-style "fg=#393939,bg=#f2777a"
# -- end COLOUR (base16)

# highlight window when it has new activity
setw -g monitor-activity on
set -g visual-activity on

# decrease command delay (increases vim responsiveness)
set -sg escape-time 1

# Start pane numbering at 1
set -g pane-base-index 1

# Start window numbering at 1
set -g base-index 1
# Renumber windows as they are created and destroyed to keep the window numbers consistent with the count
set -g renumber-windows on 

# Use vim keybindings in copy mode
setw -g mode-keys vi

setw -g history-limit 10000
